/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.15
 * Generated at: 2025-10-28 22:28:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class lyric_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/includes/footer.jsp", Long.valueOf(1759146920442L));
    _jspx_dependants.put("/includes/header.jsp", Long.valueOf(1761689749019L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"cs-cz\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, viewport-fit=cover\">\r\n");
      out.write("    <title>Moje první webová stranka</title>\r\n");
      out.write("    <meta name=\"description\" content=\"Osobní portfolio programátora skeliho\" />\r\n");
      out.write("    <meta name=\"keywords\" content=\"portfolio,Programator,Skeli,SK-IT\" />\r\n");
      out.write("    <meta name=\"author\" content=\"Skeli\" />\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"obrazky/skeliico.ico\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Alumni+Sans+Pinstripe:ital@0;1&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Bruno+Ace+SC&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Comforter+Brush&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- Slick Carousel CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css\"/>\r\n");
      out.write("    <!-- jQuery -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <!-- Slick Carousel JS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".comforter-brush-regular {\r\n");
      out.write("  font-family: \"Comforter Brush\", cursive;\r\n");
      out.write("  font-weight: 800;\r\n");
      out.write("  font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bruno-ace-sc-regular {\r\n");
      out.write("  font-family: \"Bruno Ace SC\", sans-serif;\r\n");
      out.write("  font-weight: 400;\r\n");
      out.write("  font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel iframe {\r\n");
      out.write("    display: block;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cpy {\r\n");
      out.write("    font-family: 'Alumni Sans Pinstripe', Arial, sans-serif;\r\n");
      out.write("    font-size: 1em;\r\n");
      out.write("    color: gold;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("p {\r\n");
      out.write("    font-family: 'Inter', 'Alumni Sans Pinstripe', Arial, sans-serif;\r\n");
      out.write("    font-size: 1.05em;\r\n");
      out.write("    color: #111;\r\n");
      out.write("    font-weight: 400;\r\n");
      out.write("    line-height: 1.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html, body {\r\n");
      out.write("    height: 100%;\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n");
      out.write("    background: #121212 url('img/IMG_0090.JPG') center center/cover no-repeat fixed;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    color: gold;\r\n");
      out.write("    padding: 120px 0 40px 0px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border-radius: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    /* průhlednost směrem dolů */\r\n");
      out.write("    background: linear-gradient(\r\n");
      out.write("        to bottom,\r\n");
      out.write("        rgba(34,34,34,0.9) 0%,   /* nahoře jen lehce průhledné */\r\n");
      out.write("        rgba(255,255,255,0) 100%    /* dole úplně průhledné */\r\n");
      out.write("    );\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a {\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    margin: 0 10px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a:hover {\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("main {\r\n");
      out.write("    flex: 1 0 auto;\r\n");
      out.write("    max-width: 900px;\r\n");
      out.write("    margin: 40px auto;\r\n");
      out.write("    background: rgba(255,255,255,0.49);\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0 10px 30px rgba(0,0,0,0.25);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("footer {\r\n");
      out.write("    background: linear-gradient(\r\n");
      out.write("        to top,\r\n");
      out.write("        rgba(34,34,34,0.9) 0%,\r\n");
      out.write("        rgba(255,255,255,0) 100%\r\n");
      out.write("    );\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 80px 0;\r\n");
      out.write("    position: static;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-radius: 3px 3px 0px 0px;\r\n");
      out.write("    margin-top: auto; /* push to bottom when content short */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    background-color:#333;\r\n");
      out.write("    font-family:verdana;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke {\r\n");
      out.write("    position:absolute;\r\n");
      out.write("    top:50%;\r\n");
      out.write("    left:50%;\r\n");
      out.write("    transform:translate(-50%,-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke ul {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    display:flex;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke ul li {\r\n");
      out.write("    list-style:none;\r\n");
      out.write("    font-weight:bold;\r\n");
      out.write("    letter-spacing:10px;\r\n");
      out.write("    filter:blur(1px);\r\n");
      out.write("    color:#fff;\r\n");
      out.write("    font-size:6em;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    animation: smoke 2s linear infinite;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes smoke {\r\n");
      out.write("    0% {\r\n");
      out.write("        transform: rotate(0deg) translateY(0px);\r\n");
      out.write("        opacity: 1;\r\n");
      out.write("        filter:blur(1px);\r\n");
      out.write("    }\r\n");
      out.write("    100% {\r\n");
      out.write("      transform: rotate(45deg) translateY(-200px);\r\n");
      out.write("        opacity: 0;\r\n");
      out.write("        filter:blur(20px);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke ul li:nth-child(1){\r\n");
      out.write("    animation-delay:0s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(2){\r\n");
      out.write("    animation-delay:.4s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(3){\r\n");
      out.write("    animation-delay:.8s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(4){\r\n");
      out.write("    animation-delay:1.2s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(5){\r\n");
      out.write("    animation-delay:1.6s\r\n");
      out.write("}\r\n");
      out.write("ul li a {\r\n");
      out.write("    font-family: \"Bruno Ace SC\", sans-serif;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #222;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    transition: color 0.2s, text-shadow 0.2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li a:hover {\r\n");
      out.write("    color: gold;\r\n");
      out.write("    text-shadow: 0 0 8px #ffd700;\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <h1 class=\"comforter-brush-regular\">SKELOSQUAD</h1>\r\n");
      out.write("   <nav class=\"bruno-ace-sc-regular\">\r\n");
      out.write("        <a href=\"index.jsp\">Domů</a> |\r\n");
      out.write("        <a href=\"about.jsp\">O nás</a> |\r\n");
      out.write("        <a href=\"music.jsp\">Hudba</a> |\r\n");
      out.write("        <a href=\"texty.jsp\">Texty</a>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <div style=\"position:absolute; top:10px; right:14px; font-size:0.95em;\">\r\n");
      out.write("        ");
 String currentUser = (String) session.getAttribute("username"); String currentRole = (String) session.getAttribute("role"); 
      out.write("\r\n");
      out.write("        ");
 if (currentUser == null) { 
      out.write("\r\n");
      out.write("            <a href=\"login.jsp\" style=\"color:white;\">Přihlásit</a> |\r\n");
      out.write("            <a href=\"register.jsp\" style=\"color:white;\">Registrovat</a>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("            <span>👤 ");
      out.print( currentUser );
 if ("ADMIN".equals(currentRole)) { 
      out.write(" (admin)");
 } 
      out.write("</span> |\r\n");
      out.write("            <a href=\"logout\" style=\"color:white;\">Odhlásit</a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<main class=\"avoid-footer\">\r\n");
      out.write("    <h2 style=\"text-align:center;\">Text</h2>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("      .layout { display:flex; gap:20px; }\r\n");
      out.write("      .layout aside { width:32%; max-width:320px; position: sticky; top: 20px; align-self: flex-start; }\r\n");
      out.write("      .layout section { flex:1; }\r\n");
      out.write("      .song-list { list-style:none; padding:0; margin:0; }\r\n");
      out.write("      .song-list li { margin: 6px 0; }\r\n");
      out.write(".active { font-weight:bold; color: gold; }\r\n");
      out.write("      .back { margin: 10px 0 20px; display:inline-block; }\r\n");
      out.write("      .avoid-footer { padding-bottom: 220px; }\r\n");
      out.write(".nav-top { margin-bottom: 20px; background: rgba(255,255,255,0.35); padding: 12px 16px; border-radius: 10px; box-shadow: 0 6px 18px rgba(0,0,0,0.10); overflow-x: auto; }\r\n");
      out.write("      .nav-top .song-list { display:flex; flex-wrap:wrap; gap: 10px 16px; }\r\n");
      out.write(".nav-top .song-list li { margin: 0; }\r\n");
      out.write("      .nav-top .song-list li:not(:last-child)::after { content: \" | \"; color: #777; margin: 0 6px; }\r\n");
      out.write("      .card { background: linear-gradient(180deg, rgba(255,255,255,0.50), rgba(255,255,255,0.40)); border: 1px solid rgba(0,0,0,0.08); border-radius: 12px; box-shadow: 0 10px 30px rgba(0,0,0,0.12); padding: 24px 28px; backdrop-filter: blur(4px); }\r\n");
      out.write("      .card h3 { margin-top: 0; padding-bottom: 8px; border-bottom: 1px solid rgba(0,0,0,0.06); }\r\n");
      out.write("      .card pre { background: transparent; margin: 0; max-width: 25ch; white-space: pre-wrap; overflow-wrap: anywhere; word-break: break-word; }\r\n");
      out.write("      .accent { border-left: 4px solid #ffd700; padding-left: 16px; }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"nav-top\">\r\n");
      out.write("      <h3>Názvy písní</h3>\r\n");
      out.write("      <ul class=\"song-list\">\r\n");
      out.write("        ");

            String mysqlUrl = "jdbc:mysql://localhost:3306/skeliweb?useUnicode=true&characterEncoding=utf8mb4&useSSL=false&serverTimezone=UTC";
            String mariadbUrl = "jdbc:mariadb://localhost:3306/skeliweb?useUnicode=true&characterEncoding=utf8mb4";
            String user = "Skeli";
            String password = "skeli";

            String idParam = request.getParameter("id");

            boolean mariaLoaded = false;
            boolean mysqlLoaded = false;
            try { Class.forName("org.mariadb.jdbc.Driver"); mariaLoaded = true; } catch (Throwable t) { /* ignore */ }
            try { Class.forName("com.mysql.cj.jdbc.Driver"); mysqlLoaded = true; } catch (Throwable t) { /* ignore */ }

            String listSql = "SELECT s.name AS song_name, s.year AS song_year, MIN(l.id) AS lyric_id " +
                             "FROM lyrics l LEFT JOIN songs s ON s.id = l.song_id " +
                             "GROUP BY s.name, s.year " +
                             "ORDER BY s.name ASC";

            Connection conn = null;
            boolean connected = false;
            try {
                if (mariaLoaded) {
                    conn = DriverManager.getConnection(mariadbUrl, user, password);
                    connected = true;
                } else if (mysqlLoaded) {
                    conn = DriverManager.getConnection(mysqlUrl, user, password);
                    connected = true;
                }
            } catch (SQLException ce) {
                // keep connected=false
            }

            Integer activeId = null;
            try { if (idParam != null) activeId = Integer.parseInt(idParam); } catch (Exception ignore) {}

            if (connected) {
                try (PreparedStatement ps = conn.prepareStatement(listSql);
                     ResultSet rs = ps.executeQuery()) {
                    while (rs.next()) {
                        String name = rs.getString("song_name");
                        int lyricId = rs.getInt("lyric_id");
                        boolean isActive = (activeId != null && activeId == lyricId);
        
      out.write("\r\n");
      out.write("                        <li><a class=\"");
      out.print( isActive ? "active" : "" );
      out.write("\" href=\"lyric.jsp?id=");
      out.print( lyricId );
      out.write('"');
      out.write('>');
      out.print( name );
      out.write("</a></li>\r\n");
      out.write("        ");

                    }
                } catch (SQLException e) {
                    out.println("<li>Chyba při načítání seznamu: " + e.getMessage() + "</li>");
                }
            } else {
                out.println("<li>Chyba připojení k DB.</li>");
            }
        
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <section>\r\n");
      out.write("        ");

            if (connected) {
                if (activeId == null) {
                    out.println("<p>Vyberte prosím píseň vlevo.</p>");
                } else {
                    String detailSql = "SELECT s.name AS song_name, s.year AS song_year, l.words, l.score " +
                                       "FROM lyrics l JOIN songs s ON s.id = l.song_id " +
                                       "WHERE l.id = ?";
                    try (PreparedStatement ps = conn.prepareStatement(detailSql)) {
                        ps.setInt(1, activeId);
                        try (ResultSet rs = ps.executeQuery()) {
                            if (rs.next()) {
                                String name = rs.getString("song_name");
                                String year = rs.getString("song_year");
                                String words = rs.getString("words");
        
      out.write("\r\n");
      out.write("                                <div class=\"card accent\">\r\n");
      out.write("                                  <h3>");
      out.print( name );
 if (year != null) { 
      out.write(' ');
      out.write('(');
      out.print( year );
      out.write(')');
 } 
      out.write("</h3>\r\n");
      out.write("                                  <pre style=\"white-space: pre-wrap; font-family: 'Inter', system-ui, sans-serif; font-size: 1.05em;\">");
      out.print( words );
      out.write("</pre>\r\n");
      out.write("\r\n");
      out.write("                                  <hr style=\"border:none; border-top:1px solid rgba(0,0,0,0.08); margin:16px 0;\">\r\n");
      out.write("\r\n");
      out.write("                                  <div class=\"votes\" style=\"margin-bottom:10px;\">\r\n");
      out.write("                                    <form method=\"post\" action=\"vote\" style=\"display:inline;\">\r\n");
      out.write("                                      <input type=\"hidden\" name=\"lyric_id\" value=\"");
      out.print( activeId );
      out.write("\">\r\n");
      out.write("                                      <input type=\"hidden\" name=\"action\" value=\"up\">\r\n");
      out.write("                                      <button type=\"submit\">👍</button>\r\n");
      out.write("                                    </form>\r\n");
      out.write("                                    <form method=\"post\" action=\"vote\" style=\"display:inline; margin-left:8px;\">\r\n");
      out.write("                                      <input type=\"hidden\" name=\"lyric_id\" value=\"");
      out.print( activeId );
      out.write("\">\r\n");
      out.write("                                      <input type=\"hidden\" name=\"action\" value=\"down\">\r\n");
      out.write("                                      <button type=\"submit\">👎</button>\r\n");
      out.write("                                    </form>\r\n");
      out.write("                                    <span style=\"margin-left:10px;\">\r\n");
      out.write("                                      ");

                                        int up=0, down=0;
                                        try (PreparedStatement psV = conn.prepareStatement(
                                          "SELECT SUM(vote=1) AS up, SUM(vote=-1) AS down FROM lyrics_votes WHERE lyric_id=?")) {
                                          psV.setInt(1, activeId);
                                          try (ResultSet rsv = psV.executeQuery()) {
                                            if (rsv.next()) { up = rsv.getInt("up"); down = rsv.getInt("down"); }
                                          }
                                        }
                                      
      out.write("\r\n");
      out.write("                                      <strong>");
      out.print( up );
      out.write("</strong> / <strong>");
      out.print( down );
      out.write("</strong>\r\n");
      out.write("                                    </span>\r\n");
      out.write("                                  </div>\r\n");
      out.write("\r\n");
      out.write("                                  <div class=\"views\" style=\"font-size:0.9em; color:#555;\">\r\n");
      out.write("                                    ");

                                      long views = 0;
                                      try (PreparedStatement psViews = conn.prepareStatement(
                                        "INSERT INTO lyric_views (lyric_id, views) VALUES (?,1) ON DUPLICATE KEY UPDATE views = views + 1")) {
                                        psViews.setInt(1, activeId);
                                        psViews.executeUpdate();
                                      }
                                      try (PreparedStatement psViews2 = conn.prepareStatement(
                                        "SELECT views FROM lyric_views WHERE lyric_id=?")) {
                                        psViews2.setInt(1, activeId);
                                        try (ResultSet rsv2 = psViews2.executeQuery()) { if (rsv2.next()) views = rsv2.getLong(1); }
                                      }
                                    
      out.write("\r\n");
      out.write("                                    Návštěvy: ");
      out.print( views );
      out.write("\r\n");
      out.write("                                  </div>\r\n");
      out.write("\r\n");
      out.write("                                  <div class=\"comments\" style=\"margin-top:14px;\">\r\n");
      out.write("                                    <h4>Komentáře</h4>\r\n");
      out.write("                                    <div>\r\n");
      out.write("                                      ");

                                        try (PreparedStatement psC = conn.prepareStatement(
                                          "SELECT c.content, c.created_at, u.username FROM comments c JOIN users u ON u.id=c.user_id WHERE c.lyric_id=? ORDER BY c.created_at DESC")) {
                                          psC.setInt(1, activeId);
                                          try (ResultSet rsc = psC.executeQuery()) {
                                            while (rsc.next()) {
                                      
      out.write("\r\n");
      out.write("                                              <div style=\"padding:8px 0; border-bottom:1px dashed rgba(0,0,0,0.08);\">\r\n");
      out.write("                                                <strong>");
      out.print( rsc.getString("username") );
      out.write("</strong>\r\n");
      out.write("                                                <span style=\"color:#777; font-size:0.9em;\">(");
      out.print( rsc.getTimestamp("created_at") );
      out.write(")</span>\r\n");
      out.write("                                                <div>");
      out.print( rsc.getString("content") );
      out.write("</div>\r\n");
      out.write("                                              </div>\r\n");
      out.write("                                      ");

                                            }
                                          }
                                        }
                                      
      out.write("\r\n");
      out.write("                                    </div>\r\n");
      out.write("\r\n");
      out.write("                                    ");

                                      Integer uid = (Integer) session.getAttribute("userId");
                                      if (uid != null) {
                                    
      out.write("\r\n");
      out.write("                                      <form method=\"post\" action=\"comment\" style=\"margin-top:10px;\">\r\n");
      out.write("                                        <input type=\"hidden\" name=\"lyric_id\" value=\"");
      out.print( activeId );
      out.write("\">\r\n");
      out.write("                                        <textarea name=\"content\" rows=\"3\" style=\"width:100%;\" placeholder=\"Napište komentář...\" required></textarea>\r\n");
      out.write("                                        <button type=\"submit\">Odeslat</button>\r\n");
      out.write("                                      </form>\r\n");
      out.write("                                    ");

                                      } else {
                                    
      out.write("\r\n");
      out.write("                                      <p><a href=\"login.jsp\">Přihlaste se</a> pro přidání komentáře a hlasování.</p>\r\n");
      out.write("                                    ");

                                      }
                                    
      out.write("\r\n");
      out.write("                                  </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("        ");

                            } else {
                                out.println("<p>Text nenalezen.</p>");
                            }
                        }
                    } catch (SQLException de) {
                        out.println("<p>Chyba načtení textu: " + de.getMessage() + "</p>");
                    }
                }
                try { conn.close(); } catch (Exception ignore) {}
            }
        
      out.write("\r\n");
      out.write("      </section>\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<!-- includes/footer.jsp -->\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write(" <p><br clear=\"all\"></p>\r\n");
      out.write("    <p class = \"cpy\">&copy; 2025 Skeli</p>\r\n");
      out.write("\r\n");
      out.write("    <div style=\"font-size:1em; text-align:center;\">\r\n");
      out.write("            <a href=\"https://www.facebook.com/mcskeli/\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-facebook\" style=\"color:#4267B2;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"https://www.instagram.com/skeli.official/\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-instagram\" style=\"color:#E1306C;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"https://www.youtube.com/@Skeli\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-youtube\" style=\"color:#FF0000;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"https://open.spotify.com/artist/5IouXw8U9uKCTwmncG5bUl?si=93iNOmPtT8u2l163tTkKeQ\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-spotify\" style=\"color:#1DB954;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
