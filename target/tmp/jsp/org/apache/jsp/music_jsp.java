/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.15
 * Generated at: 2025-10-31 12:05:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;

public final class music_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/includes/footer.jsp", Long.valueOf(1761886820936L));
    _jspx_dependants.put("/includes/header.jsp", Long.valueOf(1761890325794L));
    _jspx_dependants.put("/WEB-INF/i18n/i18n.jspf", Long.valueOf(1761877562333L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"cs-cz\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, viewport-fit=cover\">\r\n");
      out.write("    <title>Skeli — oficiální web</title>\r\n");
      out.write("    <meta name=\"description\" content=\"Skeli — hudba, texty, videa a novinky\" />\r\n");
      out.write("    <meta name=\"keywords\" content=\"Skeli, hudba, rap, videoklipy, texty\" />\r\n");
      out.write("    <meta name=\"author\" content=\"Skeli\" />\r\n");
      out.write("    <meta property=\"og:title\" content=\"Skeli — oficiální web\" />\r\n");
      out.write("    <meta property=\"og:description\" content=\"Poslouchej hudbu, sleduj klipy a čti texty\" />\r\n");
      out.write("    <meta property=\"og:type\" content=\"website\" />\r\n");
      out.write("    <meta property=\"og:url\" content=\"/\" />\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"obrazky/skeliico.ico\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Alumni+Sans+Pinstripe:ital@0;1&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Bruno+Ace+SC&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Comforter+Brush&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"preload\" as=\"image\" href=\"img/IMG_0090.JPG\" fetchpriority=\"high\">\r\n");
      out.write("    <!-- Slick Carousel CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\"/>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css\"/>\r\n");
      out.write("    <!-- jQuery -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <!-- Slick Carousel JS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(":root { --bg:#0b0c0d; --text:#e7e9ea; --panel:rgba(0,0,0,0.60); --panel-strong:rgba(0,0,0,0.75); --panel-border:rgba(255,255,255,0.18); --accent:#ffd700; --spotify:#CC2B2B; --youtube:#FF0000; --fw:400; }\r\n");
      out.write("body.light { --bg:#f6f6f6; --text:#111; --panel:#ffffff; --panel-strong:#ffffff; --panel-border:rgba(0,0,0,0.18); --accent:#a37b00; }\r\n");
      out.write("body.dark { --bg:#0b0c0d; --text:#e7e9ea; --panel:rgba(0,0,0,0.60); --panel-strong:rgba(0,0,0,0.75); --panel-border:rgba(255,255,255,0.18); --accent:#ffd700; }\r\n");
      out.write(".comforter-brush-regular {\r\n");
      out.write("  font-family: \"Comforter Brush\", cursive;\r\n");
      out.write("  font-weight: 800;\r\n");
      out.write("  font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bruno-ace-sc-regular {\r\n");
      out.write("  font-family: \"Bruno Ace SC\", sans-serif;\r\n");
      out.write("  font-weight: 400;\r\n");
      out.write("  font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".carousel iframe {\r\n");
      out.write("    display: block;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".cpy {\r\n");
      out.write("    font-family: 'Alumni Sans Pinstripe', Arial, sans-serif;\r\n");
      out.write("    font-size: 1em;\r\n");
      out.write("    color: gold;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("p {\r\n");
      out.write("    font-family: 'Inter', 'Alumni Sans Pinstripe', Arial, sans-serif;\r\n");
      out.write("    font-size: 1.05em;\r\n");
      out.write("    color: var(--text);\r\n");
      out.write("    font-weight: var(--fw);\r\n");
      out.write("    line-height: 1.6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html, body {\r\n");
      out.write("    height: 100%;\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Inter', 'Segoe UI', Arial, sans-serif;\r\n");
      out.write("    background: var(--bg) url('img/IMG_0090.JPG') center center/cover no-repeat fixed;\r\n");
      out.write("    color: var(--text);\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    color: gold;\r\n");
      out.write("    padding: 120px 0 40px 0px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    border-radius: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    /* průhlednost směrem dolů */\r\n");
      out.write("    background: linear-gradient(\r\n");
      out.write("        to bottom,\r\n");
      out.write("        rgba(34,34,34,0.9) 0%,   /* nahoře jen lehce průhledné */\r\n");
      out.write("        rgba(255,255,255,0) 100%    /* dole úplně průhledné */\r\n");
      out.write("    );\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a {\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    margin: 0 10px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("nav a.active { color: var(--accent); text-shadow: 0 0 8px var(--accent); position: relative; }\r\n");
      out.write("h3 { font-family: \"Bruno Ace SC\", sans-serif; letter-spacing: 0.5px; }\r\n");
      out.write(".top-controls { font-family: \"Bruno Ace SC\", sans-serif; }\r\n");
      out.write(".top-controls a, .top-controls button { font-family: inherit; }\r\n");
      out.write(".lang-switch { position: relative; }\r\n");
      out.write(".lang-switch .menu { display:none; position:absolute; right:0; top:100%; background: var(--panel-strong); border:1px solid var(--panel-border); border-radius:8px; padding:6px; min-width:140px; z-index:1000; }\r\n");
      out.write(".lang-switch.open .menu { display:block; }\r\n");
      out.write(".lang-switch .menu a { display:block; padding:6px 8px; color:#fff; text-decoration:none; }\r\n");
      out.write("body.light .lang-switch .menu a { color:#111; }\r\n");
      out.write(".lang-switch .menu a:hover { background: rgba(0,0,0,0.25); }\r\n");
      out.write("/* Light mode fixes */\r\n");
      out.write("body.light .user-dropdown { background: #fff; border:1px solid var(--panel-border); }\r\n");
      out.write(".user-dropdown a { color:#fff; }\r\n");
      out.write(".user-dropdown a:hover { background: rgba(255,255,255,0.08); }\r\n");
      out.write("body.light .user-dropdown a { color:#111; }\r\n");
      out.write("body.light .user-dropdown a:hover { background: rgba(0,0,0,0.06); }\r\n");
      out.write("body.light .top-controls { color:#111; }\r\n");
      out.write("body.light .top-controls a { color:#111; }\r\n");
      out.write("body.light .top-controls button { color:#111; border-color: rgba(0,0,0,0.35); }\r\n");
      out.write("\r\n");
      out.write("nav a:hover {\r\n");
      out.write("    color: var(--accent);\r\n");
      out.write("    text-shadow: 0 0 8px var(--accent);\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("main {\r\n");
      out.write("    flex: 1 0 auto;\r\n");
      out.write("    width: calc(100vw - 60px);\r\n");
      out.write("    max-width: none;\r\n");
      out.write("    margin: 30px auto;\r\n");
      out.write("    background: var(--panel);\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0 12px 36px rgba(0,0,0,0.35);\r\n");
      out.write("    border: 1px solid var(--panel-border);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("footer {\r\n");
      out.write("    background: linear-gradient(\r\n");
      out.write("        to top,\r\n");
      out.write("        rgba(34,34,34,0.9) 0%,\r\n");
      out.write("        rgba(255,255,255,0) 100%\r\n");
      out.write("    );\r\n");
      out.write("    color: white;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 80px 0;\r\n");
      out.write("    position: static;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-radius: 3px 3px 0px 0px;\r\n");
      out.write("    margin-top: auto; /* push to bottom when content short */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    background-color:#333;\r\n");
      out.write("    font-family:verdana;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke {\r\n");
      out.write("    position:absolute;\r\n");
      out.write("    top:50%;\r\n");
      out.write("    left:50%;\r\n");
      out.write("    transform:translate(-50%,-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke ul {\r\n");
      out.write("    margin:0;\r\n");
      out.write("    padding:0;\r\n");
      out.write("    display:flex;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke ul li {\r\n");
      out.write("    list-style:none;\r\n");
      out.write("    font-weight:bold;\r\n");
      out.write("    letter-spacing:10px;\r\n");
      out.write("    filter:blur(1px);\r\n");
      out.write("    color:#fff;\r\n");
      out.write("    font-size:6em;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    animation: smoke 2s linear infinite;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes smoke {\r\n");
      out.write("    0% {\r\n");
      out.write("        transform: rotate(0deg) translateY(0px);\r\n");
      out.write("        opacity: 1;\r\n");
      out.write("        filter:blur(1px);\r\n");
      out.write("    }\r\n");
      out.write("    100% {\r\n");
      out.write("      transform: rotate(45deg) translateY(-200px);\r\n");
      out.write("        opacity: 0;\r\n");
      out.write("        filter:blur(20px);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".smoke ul li:nth-child(1){\r\n");
      out.write("    animation-delay:0s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(2){\r\n");
      out.write("    animation-delay:.4s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(3){\r\n");
      out.write("    animation-delay:.8s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(4){\r\n");
      out.write("    animation-delay:1.2s\r\n");
      out.write("}\r\n");
      out.write(".smoke ul li:nth-child(5){\r\n");
      out.write("    animation-delay:1.6s\r\n");
      out.write("}\r\n");
      out.write("ul li a {\r\n");
      out.write("    font-family: \"Bruno Ace SC\", sans-serif;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #222;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    transition: color 0.2s, text-shadow 0.2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li a:hover {\r\n");
      out.write("    color: var(--accent);\r\n");
      out.write("    text-shadow: 0 0 8px var(--accent);\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write("  /* Global inputs styling */\r\n");
      out.write("  input[type=text], input[type=password], input[type=email], input[type=number], select, textarea {\r\n");
      out.write("    font-family: 'Inter', system-ui, sans-serif; font-size: 1.02em; color: var(--text);\r\n");
      out.write("    background: rgba(0,0,0,0.18); border:1px solid var(--panel-border); border-radius:8px; padding:8px 10px;\r\n");
      out.write("  }\r\n");
      out.write("  body.light input[type=text], body.light input[type=password], body.light input[type=email], body.light input[type=number], body.light select, body.light textarea {\r\n");
      out.write("    background: rgba(0,0,0,0.06); color:#111;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write("  /* Dropdown admin highlight */\r\n");
      out.write("  .user-dropdown a.admin { color:#ffd700; }\r\n");
      out.write("  body.light .user-dropdown a.admin { color:#a37b00; }\r\n");
      out.write("\r\n");
      out.write("  /* Persistent bottom Spotify bar */\r\n");
      out.write("  .sp-bar { position:fixed; left:0; right:0; bottom:0; z-index:9999; background: rgba(0,0,0,0.85); border-top:1px solid var(--panel-border); box-shadow: 0 -12px 30px rgba(0,0,0,.45); display:none; }\r\n");
      out.write("  .sp-inner { display:flex; align-items:center; gap:10px; padding:8px 10px; position:relative; }\r\n");
      out.write("  .sp-iframe { width:100%; height:152px; border:0; border-radius:12px 12px 0 0; }\r\n");
      out.write("  .sp-hide { position:absolute; right:10px; top:-32px; border-radius:999px; border:1px solid var(--panel-border); background: rgba(0,0,0,0.65); color:#fff; padding:4px 10px; cursor:pointer; box-shadow:0 8px 22px rgba(0,0,0,.35); }\r\n");
      out.write("  .sp-hide:hover { background: rgba(0,0,0,0.8); }\r\n");
      out.write("  .sp-minbar { position:fixed; left:50%; transform:translateX(-50%); bottom:10px; z-index:9998; display:none; background: rgba(0,0,0,0.65); color:#fff; border:1px solid var(--panel-border); border-radius:999px; padding:6px 12px; cursor:pointer; box-shadow:0 8px 22px rgba(0,0,0,.35); display:flex; align-items:center; gap:8px; }\r\n");
      out.write("  .sp-minbar i.fa-spotify { color:#FF0000; }\r\n");
      out.write("  .sp-minbar:hover { background: rgba(0,0,0,0.8); }\r\n");
      out.write("  body.light .sp-bar { background:#ffffff; box-shadow: 0 -12px 30px rgba(0,0,0,.20); }\r\n");
      out.write("body.light .sp-minbar { background: rgba(255,255,255,0.9); color:#111; border-color: rgba(0,0,0,0.15); }\r\n");
      out.write("/* Smoke veil */\r\n");
      out.write(".smoke-veil{position:fixed;left:0;right:0;bottom:0;height:35vh;pointer-events:none;background:radial-gradient(ellipse at bottom, rgba(255,255,255,0.06), transparent 60%);mask-image:linear-gradient(to top, rgba(0,0,0,.9), transparent);opacity:.55;animation:smokeMove 14s ease-in-out infinite alternate;}\r\n");
      out.write("@keyframes smokeMove{0%{transform:translateY(0)}100%{transform:translateY(10px)}}\r\n");
      out.write("  body.light .sp-hide:hover { background: rgba(255,255,255,1); }\r\n");
      out.write("  body.light .sp-minbar { background: rgba(255,255,255,0.9); color:#111; border-color: rgba(0,0,0,0.15); }\r\n");
      out.write("</style>\r\n");
      out.write("<style>\r\n");
      out.write("  .reveal { opacity: 0; transform: translateY(12px); transition: opacity .6s ease, transform .6s ease; will-change: opacity, transform; }\r\n");
      out.write("  .reveal.show { opacity: 1; transform: none; }\r\n");
      out.write("</style>\r\n");
      out.write('\r');
      out.write('\n');

  String lang = request.getParameter("lang");
  if (lang != null && (lang.equals("cs")||lang.equals("en")||lang.equals("de")||lang.equals("uk"))) {
    session.setAttribute("lang", lang);
  }
  String cur = (String) session.getAttribute("lang");
  if (cur == null) cur = "cs";
  java.util.Properties t = new java.util.Properties();
  try (java.io.InputStream in = application.getResourceAsStream("/WEB-INF/i18n/messages_"+cur+".properties")) {
    if (in != null) { t.load(new java.io.InputStreamReader(in, java.nio.charset.StandardCharsets.UTF_8)); }
  } catch (Exception ignore) {}

  // Load DB overrides and persist missing keys into DB for the current language
  java.sql.Connection _c = null;
  try {
    Class.forName("org.mariadb.jdbc.Driver");
    String _url = "jdbc:mariadb://localhost:3306/skeliweb?useUnicode=true&characterEncoding=utf8mb4";
    _c = java.sql.DriverManager.getConnection(_url, "Skeli", "skeli");
    // fetch existing translations
    java.util.Map<String,String> db = new java.util.HashMap<>();
    try (java.sql.PreparedStatement ps = _c.prepareStatement("SELECT k, v FROM translations WHERE lang = ?")) {
      ps.setString(1, cur);
      try (java.sql.ResultSet rs = ps.executeQuery()) {
        while (rs.next()) { db.put(rs.getString(1), rs.getString(2)); }
      }
    }
    // insert missing keys from file to DB (do not overwrite existing)
    try (java.sql.PreparedStatement ins = _c.prepareStatement("INSERT IGNORE INTO translations(lang,k,v) VALUES(?,?,?)")) {
      for (String k : t.stringPropertyNames()) {
        if (!db.containsKey(k)) {
          ins.setString(1, cur);
          ins.setString(2, k);
          ins.setString(3, t.getProperty(k));
          try { ins.executeUpdate(); } catch (Exception __ignore) {}
        }
      }
    }
    // override properties from DB values so site uses DB-translated strings
    for (java.util.Map.Entry<String,String> e : db.entrySet()) { t.setProperty(e.getKey(), e.getValue()); }
  } catch (Throwable __t) {
    // ignore DB issues, fallback to file-based strings
  } finally {
    if (_c != null) try { _c.close(); } catch (Exception __i) {}
  }

  request.setAttribute("t", t);

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

  String __csrf = (String) session.getAttribute("csrf");
  if (__csrf == null) { __csrf = java.util.UUID.randomUUID().toString(); session.setAttribute("csrf", __csrf); }
  request.setAttribute("csrf", __csrf);

      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("\r\n");
      out.write("   <div id=\"topClock\" class=\"bruno-ace-sc-regular\" style=\"position:absolute; left:14px; top:8px; font-size:0.95em; padding:4px 8px; border-radius:8px; background: rgba(0,0,0,0.35); border:1px solid var(--panel-border); box-shadow: 0 4px 14px rgba(0,0,0,.25);\"></div>\r\n");
      out.write("\r\n");
      out.write("   <h1 class=\"comforter-brush-regular\">SKELOSQUAD</h1>\r\n");
      out.write("   <nav class=\"bruno-ace-sc-regular\">\r\n");
      out.write("        <a href=\"index.jsp\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("menu.home","Home") );
      out.write("</a> |\r\n");
      out.write("        <a href=\"bio.jsp\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("menu.about","About") );
      out.write("</a> |\r\n");
      out.write("        <a href=\"music.jsp\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("menu.music","Music") );
      out.write("</a> |\r\n");
      out.write("        <a href=\"texty.jsp\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("menu.lyrics","Lyrics") );
      out.write("</a>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <div class=\"top-controls\" style=\"position:absolute; top:10px; right:14px; font-size:0.95em; display:flex; gap:10px; align-items:center;\">\r\n");
      out.write("        ");
 String currentUser = (String) session.getAttribute("username"); String currentRole = (String) session.getAttribute("role"); 
      out.write("\r\n");
      out.write("        <a href=\"donate.jsp\" style=\"color:var(--accent); font-weight:700;\">❤ ");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("btn.donate","Donate") );
      out.write("</a>\r\n");
      out.write("        <button id=\"fontToggle\" title=\"Toggle font weight\" style=\"background:transparent;border:1px solid rgba(255,255,255,0.5);color:white;padding:4px 8px;border-radius:6px;cursor:pointer;\">Aa</button>\r\n");
      out.write("        <button id=\"themeToggle\" title=\"Přepnout vzhled\" style=\"background:transparent;border:1px solid rgba(255,255,255,0.5);color:white;padding:4px 8px;border-radius:6px;cursor:pointer;\">🌓</button>\r\n");
      out.write("        <div class=\"lang-switch\">\r\n");
      out.write("          <button class=\"lang-btn\" title=\"Jazyk\" style=\"background:transparent;border:1px solid rgba(255,255,255,0.5);color:white;padding:4px 8px;border-radius:6px;cursor:pointer;\">🌐</button>\r\n");
      out.write("          <ul class=\"menu\">\r\n");
      out.write("             <li><a href=\"?lang=cs\">Čeština 🇨🇿</a></li>\r\n");
      out.write("             <li><a href=\"?lang=en\">English 🇬🇧</a></li>\r\n");
      out.write("             <li><a href=\"?lang=de\">Deutsch 🇩🇪</a></li>\r\n");
      out.write("             <li><a href=\"?lang=uk\">Українська 🇺🇦</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 if (currentUser == null) { 
      out.write("\r\n");
      out.write("            <a href=\"login.jsp\" style=\"color:white;\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("btn.login","Login") );
      out.write("</a> |\r\n");
      out.write("            <a href=\"register.jsp\" style=\"color:white;\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("btn.register","Register") );
      out.write("</a>\r\n");
      out.write("        ");
 } else { 
      out.write("\r\n");
      out.write("            <div class=\"user-menu\" style=\"position:relative; display:inline-block;\">\r\n");
      out.write("              <span style=\"color:white; cursor:pointer;\">👤 ");
      out.print( currentUser );
 if ("ADMIN".equals(currentRole)) { 
      out.write(" (admin)");
 } 
      out.write("</span>\r\n");
      out.write("              <div class=\"user-dropdown\" style=\"display:none; position:absolute; right:0; top:100%; background:var(--panel-strong); border:1px solid var(--panel-border); border-radius:8px; padding:6px; min-width:140px; z-index:1000;\">\r\n");
      out.write("                <a href=\"/profile.jsp\" style=\"display:block; padding:6px 8px; text-decoration:none;\">Profil</a>\r\n");
      out.write("                <a href=\"/uzivatel.jsp\" style=\"display:block; padding:6px 8px; text-decoration:none;\">Nastavení</a>\r\n");
      out.write("                ");
 if ("ADMIN".equals(currentRole)) { 
      out.write("<a href=\"/admin.jsp\" class=\"admin\" style=\"display:block; padding:6px 8px; text-decoration:none;\">Admin</a>");
 } 
      out.write("\r\n");
      out.write("                <a href=\"/logout\" style=\"display:block; padding:6px 8px; text-decoration:none;\">Odhlásit</a>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");
      out.write("<script>\r\n");
      out.write("  (function(){\r\n");
      out.write("    const fwKey='fontWeight';\r\n");
      out.write("    // Digital clock with locale based on session lang\r\n");
      out.write("    const sessionLang = (function(){ try { return '");
 String __lang = (String) session.getAttribute("lang"); if (__lang == null) __lang = "cs"; out.print(__lang); 
      out.write("'; } catch(e){ return 'cs'; } })();\r\n");
      out.write("    const localeMap = { cs:'cs-CZ', en:'en-GB', de:'de-DE', uk:'uk-UA' };\r\n");
      out.write("    function updateClock(){\r\n");
      out.write("      const el = document.getElementById('topClock'); if(!el) return;\r\n");
      out.write("      const now = new Date();\r\n");
      out.write("      const loc = localeMap[sessionLang] || sessionLang || undefined;\r\n");
      out.write("      const d = new Intl.DateTimeFormat(loc, { weekday:'long', day:'2-digit', month:'long', year:'numeric'}).format(now);\r\n");
      out.write("      const t = new Intl.DateTimeFormat(loc, { hour:'2-digit', minute:'2-digit', second:'2-digit'}).format(now);\r\n");
      out.write("      el.textContent = d + ' • ' + t;\r\n");
      out.write("    }\r\n");
      out.write("    updateClock(); setInterval(updateClock, 1000);\r\n");
      out.write("    const body=document.body; const curFw=localStorage.getItem(fwKey)||'400';\r\n");
      out.write("    document.documentElement.style.setProperty('--fw', curFw);\r\n");
      out.write("    document.getElementById('fontToggle').addEventListener('click',()=>{\r\n");
      out.write("      const newFw=(getComputedStyle(document.documentElement).getPropertyValue('--fw').trim()==='400')?'600':'400';\r\n");
      out.write("      document.documentElement.style.setProperty('--fw', newFw);\r\n");
      out.write("      localStorage.setItem(fwKey,newFw);\r\n");
      out.write("    });\r\n");
      out.write("    const k='theme';\r\n");
      out.write("    const cur=localStorage.getItem(k)||'dark';\r\n");
      out.write("    body.classList.add(cur);\r\n");
      out.write("    document.getElementById('themeToggle').addEventListener('click',()=>{\r\n");
      out.write("      body.classList.toggle('light'); body.classList.toggle('dark');\r\n");
      out.write("      const v=body.classList.contains('light')?'light':'dark'; localStorage.setItem(k,v);\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // Language menu toggle by click\r\n");
      out.write("    const langSwitch=document.querySelector('.lang-switch');\r\n");
      out.write("    const langBtn=document.querySelector('.lang-switch .lang-btn');\r\n");
      out.write("    if (langBtn && langSwitch) {\r\n");
      out.write("      langBtn.addEventListener('click', (e)=>{ e.stopPropagation(); langSwitch.classList.toggle('open'); });\r\n");
      out.write("      document.addEventListener('click', ()=>{ langSwitch.classList.remove('open'); });\r\n");
      out.write("      langSwitch.querySelectorAll('.menu a').forEach(a=>a.addEventListener('click', ()=>{ langSwitch.classList.remove('open'); }));\r\n");
      out.write("    }\r\n");
      out.write("    // User menu dropdown on hover\r\n");
      out.write("    const userMenu=document.querySelector('.user-menu');\r\n");
      out.write("    const userDropdown=document.querySelector('.user-dropdown');\r\n");
      out.write("    if (userMenu && userDropdown) {\r\n");
      out.write("      userMenu.addEventListener('mouseenter', ()=>{ userDropdown.style.display='block'; });\r\n");
      out.write("      userMenu.addEventListener('mouseleave', ()=>{ userDropdown.style.display='none'; });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // Persistent Spotify bottom bar\r\n");
      out.write("    function ensureSpBar(){\r\n");
      out.write("      if(document.getElementById('sp-bar')) return document.getElementById('sp-bar');\r\n");
      out.write("      const bar=document.createElement('div'); bar.id='sp-bar'; bar.className='sp-bar';\r\n");
      out.write("      bar.innerHTML = \"<div class='sp-inner'><button id='sp-hide' class='sp-hide' title='Skrýt přehrávač'>▼</button><iframe id='sp-iframe' class='sp-iframe' allow='autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture' loading='lazy'></iframe></div>\";\r\n");
      out.write("      document.body.appendChild(bar);\r\n");
      out.write("      const min=document.createElement('div'); min.id='sp-min'; min.className='sp-minbar'; min.innerHTML='<i class=\"fab fa-spotify\"></i> Spotify';\r\n");
      out.write("      document.body.appendChild(min);\r\n");
      out.write("      document.getElementById('sp-hide').addEventListener('click', ()=>closeBar());\r\n");
      out.write("      min.addEventListener('click', ()=>openBar());\r\n");
      out.write("      return bar;\r\n");
      out.write("    }\r\n");
      out.write("    function normalizeSrc(input){\r\n");
      out.write("      if(!input) return null;\r\n");
      out.write("      if(/^https?:\\/\\//.test(input)) return input;\r\n");
      out.write("      // short forms: track:ID, playlist:ID, album:ID, artist:ID\r\n");
      out.write("      const [type,id] = input.split(':');\r\n");
      out.write("      if(id){ return `https://open.spotify.com/embed/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("?utm_source=generator`; }\r\n");
      out.write("      return `https://open.spotify.com/embed/track/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${input}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("?utm_source=generator`;\r\n");
      out.write("    }\r\n");
      out.write("    const SP_DEFAULT = 'https://open.spotify.com/embed/artist/5IouXw8U9uKCTwmncG5bUl?utm_source=generator';\r\n");
      out.write("    function openBar(){ const bar=ensureSpBar(); const f=document.getElementById('sp-iframe'); if(!f.src){ const saved=localStorage.getItem('sp_src'); f.src=saved||SP_DEFAULT; } bar.style.display='block'; document.getElementById('sp-min').style.display='none'; localStorage.setItem('sp_min','0'); }\r\n");
      out.write("    function closeBar(){ const bar=ensureSpBar(); bar.style.display='none'; const m=document.getElementById('sp-min'); m.style.display='block'; m.innerHTML='<i class=\"fab fa-spotify\"></i> Spotify'; localStorage.setItem('sp_min','1'); }\r\n");
      out.write("    window.toggleSpotifyBar=function(){ if(ensureSpBar().style.display==='none'){ openBar(); } else { closeBar(); } }\r\n");
      out.write("    window.playSpotify=function(src){ const bar=ensureSpBar(); const url=normalizeSrc(src); const f=document.getElementById('sp-iframe'); if(f.src!==url) f.src=url; openBar(); localStorage.setItem('sp_src', url); localStorage.setItem('sp_play','true'); };\r\n");
      out.write("\r\n");
      out.write("    // Restore state on every page\r\n");
      out.write("    (function(){ const bar=ensureSpBar(); const wasMin=localStorage.getItem('sp_min')==='1'; const saved=localStorage.getItem('sp_src'); const f=document.getElementById('sp-iframe'); if(saved){ f.src=saved; }\r\n");
      out.write("      if((saved||SP_DEFAULT) && !wasMin){ f.src=f.src||SP_DEFAULT; bar.style.display='block'; document.getElementById('sp-min').style.display='none'; }\r\n");
      out.write("      else { bar.style.display='none'; const m=document.getElementById('sp-min'); m.style.display='block'; m.innerHTML='<i class=\"fab fa-spotify\"></i> Spotify'; }\r\n");
      out.write("    })();\r\n");
      out.write("\r\n");
      out.write("    // Autowire any element with data-spotify-src\r\n");
      out.write("    document.addEventListener('click', function(e){ const t=e.target.closest('[data-spotify-src]'); if(t){ e.preventDefault(); window.playSpotify(t.getAttribute('data-spotify-src')); }});\r\n");
      out.write("\r\n");
      out.write("    // Lightweight PJAX navigation to preserve global UI (Spotify bar)\r\n");
      out.write("    (function(){\r\n");
      out.write("      const ORIGIN = location.origin;\r\n");
      out.write("      function isInternal(a){ try{ const u=new URL(a.href, ORIGIN); return u.origin===ORIGIN && !a.hasAttribute('download') && (!a.target || a.target==='_self'); }catch{return false;} }\r\n");
      out.write("      function extractMain(html){\r\n");
      out.write("        const doc = new DOMParser().parseFromString(html, 'text/html');\r\n");
      out.write("        const main = doc.querySelector('main');\r\n");
      out.write("        return main ? main : doc.body;\r\n");
      out.write("      }\r\n");
      out.write("      async function navigate(url, push){\r\n");
      out.write("        try{\r\n");
      out.write("          document.body.style.cursor='progress';\r\n");
      out.write("          const res = await fetch(url, {headers:{'X-Requested-With':'fetch'}});\r\n");
      out.write("          const text = await res.text();\r\n");
      out.write("          const newMain = extractMain(text);\r\n");
      out.write("          if(!newMain) return location.assign(url);\r\n");
      out.write("          const curMain = document.querySelector('main');\r\n");
      out.write("          if(curMain){ curMain.replaceWith(newMain); } else { document.body.appendChild(newMain); }\r\n");
      out.write("          const titleMatch = text.match(/<title>([\\s\\S]*?)<\\/title>/i); if(titleMatch) document.title = titleMatch[1];\r\n");
      out.write("          // re-execute inline scripts in main\r\n");
      out.write("          newMain.querySelectorAll('script').forEach(old => { const s=document.createElement('script'); if(old.src){ s.src=old.src; } else { s.textContent=old.textContent; } (old.type && (s.type=old.type)); old.replaceWith(s); });\r\n");
      out.write("          if(push) history.pushState({url}, '', url);\r\n");
      out.write("          window.scrollTo({top:0, behavior:'smooth'});\r\n");
      out.write("          document.dispatchEvent(new CustomEvent('pjax:done', {detail:{url}}));\r\n");
      out.write("        }catch(e){ location.assign(url); }\r\n");
      out.write("        finally{ document.body.style.cursor=''; }\r\n");
      out.write("      }\r\n");
      out.write("      document.addEventListener('click', function(e){\r\n");
      out.write("        const a = e.target.closest('a');\r\n");
      out.write("        if(!a) return;\r\n");
      out.write("        if(!isInternal(a)) return;\r\n");
      out.write("        const href = a.getAttribute('href');\r\n");
      out.write("        if(!href || href.startsWith('#')) return;\r\n");
      out.write("        // allow full reload for language switch to refresh header/nav strings\r\n");
      out.write("        if(href.includes('lang=')) return;\r\n");
      out.write("        e.preventDefault();\r\n");
      out.write("        navigate(href, true);\r\n");
      out.write("      });\r\n");
      out.write("      window.addEventListener('popstate', (e)=>{ const url = (e.state && e.state.url) || location.href; navigate(url, false); });\r\n");
      out.write("    })();\r\n");
      out.write("\r\n");
      out.write("    // Active navigation highlight\r\n");
      out.write("    function updateActiveNav(){\r\n");
      out.write("      const cur = location.pathname.split('/').pop() || 'index.jsp';\r\n");
      out.write("      document.querySelectorAll('header nav a').forEach(a=>{\r\n");
      out.write("        try{\r\n");
      out.write("          const href = a.getAttribute('href') || '';\r\n");
      out.write("          const normalized = href.split('?')[0];\r\n");
      out.write("          if(!normalized) return;\r\n");
      out.write("          const isActive = ((cur === '' || cur === '/') && (normalized === '/' || normalized === 'index.jsp')) || (cur === normalized || (location.pathname.endsWith('/') && normalized === 'index.jsp'));\r\n");
      out.write("          a.classList.toggle('active', isActive);\r\n");
      out.write("        }catch{}\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("    updateActiveNav();\r\n");
      out.write("    document.addEventListener('pjax:done', updateActiveNav);\r\n");
      out.write("\r\n");
      out.write("    // Parallax background\r\n");
      out.write("    (function(){\r\n");
      out.write("      let lastY=0, ticking=false;\r\n");
      out.write("      function onScroll(){ lastY=window.scrollY||0; if(!ticking){ requestAnimationFrame(()=>{ document.body.style.backgroundPosition = `center ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Math.round(lastY*0.25)}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("px`; ticking=false; }); ticking=true; } }\r\n");
      out.write("      window.addEventListener('scroll', onScroll, {passive:true});\r\n");
      out.write("      onScroll();\r\n");
      out.write("    })();\r\n");
      out.write("\r\n");
      out.write("    // Reveal animations\r\n");
      out.write("    (function(){\r\n");
      out.write("      const io = new IntersectionObserver((entries)=>{\r\n");
      out.write("        entries.forEach(e=>{ if(e.isIntersecting){ e.target.classList.add('show'); io.unobserve(e.target); } });\r\n");
      out.write("      }, {threshold:0.1});\r\n");
      out.write("      function bind(root){ (root||document).querySelectorAll('[data-reveal], .reveal').forEach(el=>{ el.classList.add('reveal'); io.observe(el); }); }\r\n");
      out.write("      bind(document);\r\n");
      out.write("      document.addEventListener('pjax:done', (e)=>{ bind(document.querySelector('main')||document); });\r\n");
      out.write("    })();\r\n");
      out.write("\r\n");
      out.write("  })();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".section { background: var(--panel); border: 1px solid var(--panel-border); border-radius: 12px; padding: 16px 18px; margin-bottom: 18px; box-shadow: 0 6px 18px rgba(0,0,0,0.20); }\r\n");
      out.write("  .section.spotify { background: linear-gradient(0deg, rgba(204,43,43,0.24), rgba(255,255,255,0.04)); border-color: rgba(204,43,43,0.45); }\r\n");
      out.write("  .section.youtube { background: linear-gradient(0deg, rgba(255,0,0,0.14), rgba(255,255,255,0.05)); border-color: rgba(255,0,0,0.28); }\r\n");
      out.write("  .section-title { margin: 0 0 10px; display:flex; align-items:center; gap: 8px; font-weight:700; }\r\n");
      out.write(".media-columns { display:block; }\r\n");
      out.write("  .section-title .ico { font-size: 1.2em; }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");

    String mysqlUrl = "jdbc:mysql://127.0.0.1:3306/skeliweb?useUnicode=true&characterEncoding=utf8mb4&useSSL=false&serverTimezone=UTC";
    String mariadbUrl = "jdbc:mariadb://127.0.0.1:3306/skeliweb?useUnicode=true&characterEncoding=utf8mb4";
    String user = "Skeli";
    String password = "skeli";
    boolean mariaLoaded = false;
    boolean mysqlLoaded = false;
try { Class.forName("org.mariadb.jdbc.Driver"); mariaLoaded = true; } catch (Throwable th) { /* ignore */ }
    try { Class.forName("com.mysql.cj.jdbc.Driver"); mysqlLoaded = true; } catch (Throwable th) { /* ignore */ }

    String sql = "SELECT v.youtube_id, COALESCE(v.title, s.name, v.youtube_id) AS title, s.year " +
                 "FROM videos v LEFT JOIN songs s ON s.id = v.song_id " +
                 "ORDER BY COALESCE(v.title, s.name, v.youtube_id) ASC";

    java.util.List<String> ids = new java.util.ArrayList<>();
    java.util.List<String> names = new java.util.ArrayList<>();
    java.util.List<String> years = new java.util.ArrayList<>();

    try (Connection conn = mariaLoaded ? java.sql.DriverManager.getConnection(mariadbUrl, user, password)
                                       : (mysqlLoaded ? java.sql.DriverManager.getConnection(mysqlUrl, user, password) : null)) {
        if (conn != null) {
            try (PreparedStatement ps = conn.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    ids.add(rs.getString(1));
                    names.add(rs.getString(2));
                    years.add(rs.getString(3));
                }
            }
        }
    } catch (SQLException e) {
        // fallback empty, handled below
    }
    if (ids.isEmpty()) {
        // show an info banner if DB unavailable; grid stays empty
        request.setAttribute("videoInfo", "Nelze načíst videa z DB. Zkuste to prosím později.");
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<main>\r\n");
      out.write("  <h2 class=\"bruno-ace-sc-regular\" style=\"text-align:center;\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("menu.music","Music") );
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"media-columns\">\r\n");
      out.write("  <section class=\"section youtube\">\r\n");
      out.write("    <h3 class=\"section-title\"><span class=\"ico\"><i class=\"fab fa-youtube\" style=\"color:#FF0000\"></i></span> ");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("section.youtube","YouTube") );
      out.write("</h3>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/elliptic", out, true);
      out.write("\r\n");
      out.write("  </section>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<!-- includes/footer.jsp -->\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write(" <p><br clear=\"all\"></p>\r\n");
      out.write("    <p class = \"cpy\">&copy; 2025 Skeli</p>\r\n");
      out.write("\r\n");
      out.write("    <div style=\"font-size:1em; text-align:center;\">\r\n");
      out.write("            <a href=\"https://www.facebook.com/mcskeli/\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-facebook\" style=\"color:#4267B2;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"https://www.instagram.com/skeli.official/\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-instagram\" style=\"color:#E1306C;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"https://www.youtube.com/@Skeli\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-youtube\" style=\"color:#FF0000;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"https://open.spotify.com/artist/5IouXw8U9uKCTwmncG5bUl?si=93iNOmPtT8u2l163tTkKeQ\" target=\"_blank\" style=\"margin:0 2px; color:inherit; text-decoration:none;\">\r\n");
      out.write("                <i class=\"fab fa-spotify\" style=\"color:#1DB954;\"></i>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("</footer>\r\n");
      out.write("<div class=\"smoke-veil\"></div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"cookieBar\" style=\"position:fixed; left:20px; right:20px; bottom:20px; background:#111; color:#fff; padding:12px 16px; border-radius:10px; box-shadow:0 10px 30px rgba(0,0,0,.25); display:none;\">\r\n");
      out.write("  ");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("cookie.message","This site uses cookies and third-party platforms (YouTube/Spotify).") );
      out.write(" <a href=\"/privacy.jsp\" style=\"color:#ffd700;\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("cookie.policy","Privacy") );
      out.write("</a> | <a href=\"/terms.jsp\" style=\"color:#ffd700;\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("cookie.terms","Terms") );
      out.write("</a>\r\n");
      out.write("  <div style=\"float:right;\">\r\n");
      out.write("    <button id=\"cookieAccept\" style=\"margin-right:8px;\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("cookie.accept","Accept") );
      out.write("</button>\r\n");
      out.write("    <button id=\"cookieReject\">");
      out.print( ((java.util.Properties)request.getAttribute("t")).getProperty("cookie.reject","Reject") );
      out.write("</button>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("  (function(){\r\n");
      out.write("    const k='cookieConsent'; const v=localStorage.getItem(k);\r\n");
      out.write("    if(!v) document.getElementById('cookieBar').style.display='block';\r\n");
      out.write("    document.getElementById('cookieAccept').onclick=function(){ localStorage.setItem(k,'true'); document.getElementById('cookieBar').style.display='none'; document.dispatchEvent(new Event('consent-granted')); };\r\n");
      out.write("    document.getElementById('cookieReject').onclick=function(){ localStorage.setItem(k,'false'); document.getElementById('cookieBar').style.display='none'; };\r\n");
      out.write("  })();\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
